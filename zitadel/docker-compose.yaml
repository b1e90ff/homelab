services:
  zitadel:
    hostname: zitadel
    environment:
      ZITADEL_MASTERKEY: ${ZITADEL_MASTERKEY}
      ZITADEL_FIRSTINSTANCE_ORG_HUMAN_USERNAME: ${ZITADEL_FIRSTINSTANCE_ORG_HUMAN_USERNAME}
      ZITADEL_FIRSTINSTANCE_ORG_HUMAN_PASSWORD: ${ZITADEL_FIRSTINSTANCE_ORG_HUMAN_PASSWORD}
      ZITADEL_DATABASE_POSTGRES_HOST: db
      ZITADEL_DATABASE_POSTGRES_PORT: 5432
      ZITADEL_DATABASE_POSTGRES_DATABASE: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_USERNAME: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE: disable
      ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE: disable
    restart: "always"
    networks:
      - "zitadel"
      - "proxy"
    image: "ghcr.io/zitadel/zitadel:stable"
    command: 'start-from-init --steps /steps.yaml --config /config.yaml --masterkey "${ZITADEL_MASTERKEY}" --tlsMode external'
    depends_on:
      db:
        condition: "service_healthy"
    volumes:
      - "./init-steps.yaml:/steps.yaml:ro"
      - "./config.yaml:/config.yaml:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zitadel.entrypoints=http"
      - "traefik.http.routers.zitadel.rule=Host(`auth.tat.systems`)"
      - "traefik.http.middlewares.zitadel-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.zitadel.middlewares=zitadel-https-redirect"
      - "traefik.http.routers.zitadel-secure.entrypoints=https"
      - "traefik.http.routers.zitadel-secure.rule=Host(`auth.tat.systems`)"
      - "traefik.http.routers.zitadel-secure.tls=true"
      - "traefik.http.routers.zitadel-secure.service=zitadel"
      - "traefik.http.services.zitadel.loadbalancer.server.scheme=h2c"
      - "traefik.http.services.zitadel.loadbalancer.passHostHeader=true"
      - "traefik.http.services.zitadel.loadbalancer.server.port=8080"
      - "traefik.docker.network=proxy"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  db:
    hostname: db
    restart: "always"
    image: postgres:16-alpine
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - "zitadel"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "zitadel", "-U", "postgres"]
      interval: "10s"
      timeout: "30s"
      retries: 5
      start_period: "20s"
    volumes:
      - "../data/zitadel/data:/var/lib/postgresql/data:rw"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

networks:
  zitadel:
  proxy:
    external: true

volumes:
  data: