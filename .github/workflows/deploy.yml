name: Deploy to Homelab

on:
  workflow_dispatch:
    inputs:
      confirm_deploy:
        description: 'Type "deploy" to confirm deployment'
        required: true
        type: string
      services:
        description: 'Services to deploy (all, or comma-separated list e.g.: postgres,zitadel)'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    if: github.event.inputs.confirm_deploy == 'deploy'
    steps:
      - uses: actions/checkout@v4

      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: $(cat ~/.ssh/known_hosts)
          if_key_exists: fail

      - name: Process services
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
          # Service secrets
          CF_DNS_API_TOKEN: ${{ secrets.CF_DNS_API_TOKEN }}
          TRAEFIK_DASHBOARD_CREDENTIALS: ${{ secrets.TRAEFIK_DASHBOARD_CREDENTIALS }}
          ACME_EMAIL: ${{ secrets.ACME_EMAIL }}
          CROWDSEC_BOUNCER_API_KEY: ${{ secrets.CROWDSEC_BOUNCER_API_KEY }}
          ZITADEL_FIRSTINSTANCE_ORG_HUMAN_USERNAME: ${{ secrets.ZITADEL_FIRSTINSTANCE_ORG_HUMAN_USERNAME }}
          ZITADEL_FIRSTINSTANCE_ORG_HUMAN_PASSWORD: ${{ secrets.ZITADEL_FIRSTINSTANCE_ORG_HUMAN_PASSWORD }}
          ZITADEL_COCKROACH_USERNAME: ${{ secrets.ZITADEL_COCKROACH_USERNAME }}
          ZITADEL_DOMAIN: ${{ secrets.ZITADEL_DOMAIN }}
          ZITADEL_MASTERKEY: ${{ secrets.ZITADEL_MASTERKEY }}
        run: |
          chmod +x scripts/*.sh
          services=$(./scripts/get-services.sh "${{ github.event.inputs.services }}")
          echo "Found services: $services"
          for service in ${services//,/ }; do
            echo "Processing $service"
            ./scripts/replace-secrets.sh "$service" "$DEPLOY_PATH"
            ./scripts/upload-files.sh "$service" "$SSH_USER" "$SSH_HOST" "$DEPLOY_PATH"
            ./scripts/create-env.sh "$service" "$SSH_USER" "$SSH_HOST" "$DEPLOY_PATH"
            ./scripts/deploy-docker-service.sh "$service" "$SSH_USER" "$SSH_HOST" "$DEPLOY_PATH"
            echo "Done processing $service"
          done