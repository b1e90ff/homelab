services:
  zitadel:
    secrets:
      - ZITADEL_FIRSTINSTANCE_ORG_HUMAN_USERNAME
      - ZITADEL_FIRSTINSTANCE_ORG_HUMAN_PASSWORD
      - ZITADEL_COCKROACH_USERNAME
      - ZITADEL_DOMAIN
      - ZITADEL_MASTERKEY
  crowdsec:
    secrets:
      - CROWDSEC_BOUNCER_API_KEY
  traefik:
    secrets:
      - ACME_EMAIL
      - CF_DNS_API_TOKEN
      - TRAEFIK_DASHBOARD_CREDENTIALS


for CONTAINER in "${!CONTAINERS[@]}"; do
  echo "Erstelle und starte Container: $CONTAINER"
  CONFIG_FILE=$BACKUP_DIR/${CONTAINER}_config.json
  IMAGE=$(jq -r '.[0].Config.Image' $CONFIG_FILE)
  MOUNTS=$(jq -r '.[0].Mounts[] | "--mount source=\(.Name),target=\(.Destination)"' $CONFIG_FILE | tr '\n' ' ')
  ENV_VARS=$(jq -r '.[0].Config.Env[] | "--env \(. | split(\"=\")[0])=\(. | split(\"=\")[1])"' $CONFIG_FILE | tr '\n' ' ')
  PORTS=$(jq -r '.[0].NetworkSettings.Ports | to_entries[] | "--publish \(.key | split(\"/\")[0]):\(.value[0].HostPort)"' $CONFIG_FILE | tr '\n' ' ')
  CMD=$(jq -r '.[0].Config.Cmd | join(" ")' $CONFIG_FILE)
  docker create --name $CONTAINER $MOUNTS $ENV_VARS $PORTS $IMAGE $CMD
  docker start $CONTAINER
done
